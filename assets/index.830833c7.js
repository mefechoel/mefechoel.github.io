/*! Licenses of used libraries, fonts and other software can be found at /lib-licenses.txt */
import{D as i}from"./DetailsWrapper.cb609896.js";import{P as n}from"./Pixelnetz.ca823a9c.js";import{j as t,a as e}from"./index.64b7b175.js";import"./vendor.8bdb3946.js";import"./TextContainer.fd37e01e.js";var r="/assets/img/pixelnetz-1000.9e424a9948ddc56d.avif",o="/assets/img/pixelnetz-750.80a5b85011c5dd0d.avif",p="/assets/img/pixelnetz-500.54ae326d0cdc6a20.avif",l="/assets/img/pixelnetz-250.e59f188f7d28b481.avif",h="/assets/img/pixelnetz-1000.f9cd17f45d67b27f.webp",d="/assets/img/pixelnetz-750.d722753d3c4b37d3.webp",c="/assets/img/pixelnetz-500.fae4d283eebc6981.webp",g="/assets/img/pixelnetz-250.6eb1a596ad0d5a7a.webp",s="/assets/img/pixelnetz-1000.00118605b89abd81.jpg",m="/assets/img/pixelnetz-750.7c5f96312629919f.jpg",f="/assets/img/pixelnetz-500.be8b2de457e7b500.jpg",b="/assets/img/pixelnetz-250.02ed5e3b3662653e.jpg",u="/assets/img/pixelnetz.a9c16b85e6c9d2b1.jpg";const v="sO-iTW",w="sgc10R",x="sn4g9c",z="svkyNg";var a={wrapper:v,img:w,caption:x,figure:z};const y=()=>t(i,{className:a.wrapper,children:[e(i.Img,{className:a.img,children:e(n,{})}),t(i.Body,{children:[e("q",{children:"Pixelnetz"})," (en: pixel grid) was created as a group project during the 5th and 6th semester of my"," ",e("a",{href:"https://www.th-nuernberg.de/en/faculties/efi/study/media-engineering-beng/",target:"_blank",rel:"noopener noreferrer",children:"Media Engineering"})," ","studies. The main objective was, to create a system, using which attendees of an event could be part of the light show using their smartphones. This can be best exemplified in the setting of a sports arena. Every visitor is assigned a seat. All the seats are laid out in a grid. Each visitor also carries a smartphone with them. If we now imagine, all visitors were to hold out their smartphones in front of them, each smartphone could be thought of as one pixel of a screen.",e("br",{}),"The pixel grid is a system, that knows where each smartphone is located and is able to change the color of the phone's screen. This way it can display pictures and videos using the arenas layout as a screen.",e("br",{}),e("br",{}),"The pixel grid consists of three main components. First, a public web app each attendee of an event opens on their smartphone. This app registers the phone and its position, which can be retrieved from a qr code, that can be scanned at the seat. When a picture or a video is displayed, the app adjusts the web pages background color to match the pixel in the image it represents.",e("br",{}),"The second and most integral part of the pixel grid is its backend. It consists of a NodeJS server, that connects to every phone and established a WebSocket connection. Using this WebSocket, it is able to send live data to the phone. Next, it syncs the phone's and the server's clock. This is, to make sure, that when a video is displayed, all phones step from one frame to the next at the exact same time. Otherwise smooth video playback would not be possible. When it is time to display a video, the backend sends the color data a phone should display and the start time of the video through the WebSocket. This color data is called a"," ",e("q",{children:"sequence"}),". It is also the backend's responsibility to create sequence data from images and videos (in the form of animated GIFs). It does this in a component called the ",e("q",{children:"rasterizer"}),". It is written in the Rust programming language, to ensure maximum performance. Rust makes parallel programming relatively easy, which is a great fit for the rasterizer, as it needs to loop through the frames of an animated image and each frames pixels. This process can be sped up drastiacally, by looping through frames and pixels in parallel.",e("br",{}),"The third and last component is the control app, which is protected with a password and only accessible to the people running the light show. It can be used to upload new images and videos, to monitor connected devices, to start and stop video playback and to preview a video, setting the video dimensions to the size of the currently connected grid. The controll app is a web app written in the JavaScript programming language using the frontend libraries"," ",e("a",{href:"https://reactjs.org/",target:"_blank",rel:"noopener noreferrer",children:"React"})," ","and"," ",e("a",{href:"https://redux.js.org/",target:"_blank",rel:"noopener noreferrer",children:"Redux"}),"."]}),t("figure",{className:a.figure,children:[e("a",{href:u,target:"_blank",rel:"noopener noreferrer",children:t("picture",{children:[e("source",{type:"image/avif",srcSet:`${r} 1000w, ${o} 750w, ${p} 500w, ${l} 250w`}),e("source",{type:"image/webp",srcSet:`${h} 1000w, ${d} 750w, ${c} 500w, ${g} 250w`}),e("source",{type:"image/jpeg",srcSet:`${s} 1000w, ${m} 750w, ${f} 500w, ${b} 250w`}),e("img",{width:1e3*2,height:562*2,src:s,alt:"Multiple smartphones displaying a colorful gradient, next to a computer, controlling the animation via the control web app",loading:"lazy"})]})}),e("figcaption",{className:a.caption,children:"Control web page running an animation"})]})]});var I=y;export{I as default};
